{"version":3,"file":"main.js","sources":["../node_modules/tslib/tslib.es6.js","../src/lib/CachingStrategies/Heap.ts","../src/config.ts","../src/utils/screeps-utf15.js","../src/lib/CachingStrategies/Serializers/Number.ts","../src/lib/CachingStrategies/withSerializer.ts","../src/lib/CachingStrategies/Memory.ts","../src/utils/packrat.ts","../src/lib/CachingStrategies/Serializers/MoveTarget.ts","../src/lib/CachingStrategies/Serializers/RoomPosition.ts","../src/lib/CachingStrategies/index.ts","../src/lib/CostMatrixes/index.ts","../src/lib/Keys/ObjectId.ts","../src/lib/Keys/Creep.ts","../src/utils/profiler.ts","../src/lib/Movement/moveTo.ts","../src/lib/index.ts","../src/test.ts","../src/main.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { GenericCachingStrategy } from '.';\n\nconst cache = new Map<string, any>();\nconst expirationCache = new Map<string, number>();\n\nexport const HeapCache: GenericCachingStrategy<any> = {\n  set(key: string, value: any, expiration?: number) {\n    cache.set(key, value);\n    if (expiration !== undefined) {\n      expirationCache.set(key, expiration);\n    }\n  },\n  get(key: string) {\n    return cache.get(key);\n  },\n  expires(key: string) {\n    return expirationCache.get(key);\n  },\n  delete(key: string) {\n    cache.delete(key);\n  },\n  with() {\n    return HeapCache; // HeapCache never uses serializers\n  },\n  clean() {\n    for (const [key, expires] of expirationCache) {\n      if (Game.time >= expires) {\n        HeapCache.delete(key);\n        expirationCache.delete(key);\n      }\n    }\n  }\n};\n","export const config = {\n  DEFAULT_MOVE_OPTS: {\n    serializeMemory: true,\n    reusePath: 5,\n    visualizePathStyle: {\n      fill: 'transparent',\n      stroke: '#fff',\n      lineStyle: 'dashed',\n      strokeWidth: 0.15,\n      opacity: 0.1\n    } as PolyStyle,\n    avoidCreeps: true,\n    avoidObstacleStructures: true,\n    roadCost: 1,\n    plainCost: 2,\n    swampCost: 10\n  },\n  MEMORY_CACHE_PATH: '_cg',\n  MEMORY_CACHE_EXPIRATION_PATH: '_cge'\n};\n","'use strict';\n\nexport const MAX_DEPTH  = 53       // Number.MAX_SAFE_INTEGER === (2^53 - 1)\n\nconst // #define\n    SAFE_BITS           = 15,       // 15 of 16 UTF-16 bits\n    UNPRINTABLE_OFFSET  = 48,       // ASCII '0'\n    UPPER_BOUND         = 0xFFFF,   // Max 16 bit value\n    POWERS_OF_2 = [1,\n        2,                      4,                      8,                      16,\n        32,                     64,                     128,                    256,\n        512,                    1024,                   2048,                   4096,\n        8192,                   16384,                  32768,                  65536,\n        131072,                 262144,                 524288,                 1048576,\n        2097152,                4194304,                8388608,                16777216,\n        33554432,               67108864,               134217728,              268435456,\n        536870912,              1073741824,             2147483648,             4294967296,\n        8589934592,             17179869184,            34359738368,            68719476736,\n        137438953472,           274877906944,           549755813888,           1099511627776,\n        2199023255552,          4398046511104,          8796093022208,          17592186044416,\n        35184372088832,         70368744177664,         140737488355328,        281474976710656,\n        562949953421312,        1125899906842624,       2251799813685248,       4503599627370496,\n        9007199254740992        // 2^53 max\n    ];\n\n/// Maximum representable by SAFE_BITS number + 1 \nconst UPPER_LIMIT = POWERS_OF_2[SAFE_BITS];\n\n/// Set of lib errors\nclass RangeCodecError extends RangeError { constructor(msg) { super(\"[utf15][RangeError]: \" + msg); } }\nclass TypeCodecError  extends TypeError  { constructor(msg) { super(\"[utf15][TypeError]: \"  + msg); } }\n\n\n/// Throws runtime exception in case of failed condition\nconst assert = (condition, Err, ...str) => {\n    if(!condition) throw new Err(str.reduce((o,s) => (o+s+' '), '')); };\n\n/// @returns normalized UTF CodePoint\nconst num_to_code_point = (x) => {\n    x = +x;\n    assert(x >= 0 && x < UPPER_LIMIT, RangeCodecError, 'x out of bounds:', x);\n    x += UNPRINTABLE_OFFSET;\n    return x;\n};\n\n/// @returns extracted unsigned value from CodePoint\nconst code_point_to_num = (x) => {\n    x = +x;\n    assert(x >= 0 && x <= UPPER_BOUND, RangeCodecError, 'x out of bounds:', x);\n    x -= UNPRINTABLE_OFFSET;\n    return x;\n};\n\nconst check_cfg = (cfg) => {\n    let fail = false;\n    fail = fail || isNaN(cfg.meta)  || (cfg.meta  !== 0 && cfg.meta  !== 1);\n    fail = fail || isNaN(cfg.array) || (cfg.array !== 0 && cfg.array !== 1);\n    if(!fail) (()=>{\n        const depth_is_array = Array.isArray(cfg.depth);\n        fail = fail || (depth_is_array && !cfg.array);\n        if(fail) return;\n        \n        const fail_depth = (x) => (isNaN(x) || x <= 0 || x > MAX_DEPTH);\n        if(depth_is_array) {\n            cfg.depth.forEach((d, idx) => {\n                cfg.depth[idx] = +cfg.depth[idx];\n                fail = fail || fail_depth(d);\n            });\n        } else {\n            cfg.depth = +cfg.depth;\n            fail = fail || fail_depth(cfg.depth);\n        }\n    })();\n    \n    if(fail) {\n        let str = '[JSON.stringify() ERROR]';\n        try { str = JSON.stringify(cfg); } finally {}\n        assert(0, TypeCodecError, 'Codec config is invalid:', str);\n    }\n};\n\nconst serialize_meta = (str, meta) => {\n    const depth = Array.isArray(meta.depth) ? 0 : meta.depth;\n    return str + String.fromCodePoint(\n        num_to_code_point(meta.array),\n        num_to_code_point(depth));\n};\n\nconst deserialize_meta = (str, meta, offset) => {\n    offset = offset || 0;\n    meta.array = code_point_to_num(str.codePointAt(offset    ));\n    meta.depth = code_point_to_num(str.codePointAt(offset + 1));\n    return [str.slice(offset + 2), 2];\n};\n\nfunction encode_array(res, values) {\n    const depth_is_array = Array.isArray(this.depth);\n    \n    const fixed_depth = depth_is_array ? 0 : this.depth;\n    const depths = depth_is_array ? this.depth : [];\n\n    assert(fixed_depth || depths.length === values.length, TypeCodecError,\n        'Wrong depths array length:', depths, values);\n\n    if(!depth_is_array) // Save array length as meta\n        res += String.fromCodePoint(num_to_code_point(values.length));\n\n    let symbol_done = 0, symbol_acc = 0;\n\n    // Cycle over values\n    for(let i = 0, len = values.length; i < len; ++i) {\n\n        // Current value and its bit depth\n        const value = values[i], depth = fixed_depth || depths[i];\n\n        // Cycle over value bits\n        for(let value_done = 0; value_done < depth;) {\n\n            const symbol_left   = SAFE_BITS - symbol_done;\n            const value_left    = depth - value_done;\n            const bits_to_write = Math.min(symbol_left, value_left);\n\n            let mask = Math.floor(value / POWERS_OF_2[value_done]);\n            mask %= POWERS_OF_2[bits_to_write];\n            mask *= POWERS_OF_2[symbol_done];\n\n            symbol_acc  += mask;\n            value_done  += bits_to_write;\n            symbol_done += bits_to_write;\n\n            // Output symbol ready, push it\n            if(symbol_done === SAFE_BITS) {\n                res += String.fromCodePoint(num_to_code_point(symbol_acc));\n                symbol_done = symbol_acc = 0;\n            }\n        }\n    }\n\n    if(symbol_done !== 0) // Last symbol left\n        res += String.fromCodePoint(num_to_code_point(symbol_acc));\n    \n    return res;\n}\n\nfunction decode_array(str, meta) {\n    assert(!this.meta || meta.depth > 0 || (meta.depth === 0 && Array.isArray(this.depth)),\n        TypeCodecError, 'Array decoding error (check inputs and codec config)');\n\n    meta.depth = meta.depth || this.depth;\n    const depth_is_array = Array.isArray(meta.depth);\n\n    let it = 0, i = 0;\n    const length = depth_is_array ? meta.depth.length : code_point_to_num(str.codePointAt(it++));\n    const fixed_depth = depth_is_array ? 0 : meta.depth;\n    const depths = depth_is_array ? meta.depth : [];\n    const values = new Array(length);\n    \n    let symbol_done = 0;\n    let chunk = code_point_to_num(str.codePointAt(it++));\n\n    // Cycle over values\n    while(i < length) {\n\n        const depth = fixed_depth || depths[i];\n        let value_acc = 0, value_done = 0;\n\n        // Cycle over value bits\n        while(value_done < depth) {\n            const symbol_left   = SAFE_BITS - symbol_done;\n            const value_left    = depth - value_done;\n            const bits_to_read  = Math.min(symbol_left, value_left);\n\n            let data = Math.floor(chunk / POWERS_OF_2[symbol_done]);\n            data %= POWERS_OF_2[bits_to_read];\n            data *= POWERS_OF_2[value_done];\n\n            value_acc   += data;\n            value_done  += bits_to_read;\n            symbol_done += bits_to_read;\n\n            // The whole symbol has been processed, move to next\n            if(symbol_done === SAFE_BITS) {\n                // It was the last code unit, break without iterators changing\n                if((i + 1) === length && value_done === depth) break;\n                chunk = code_point_to_num(str.codePointAt(it++));\n                symbol_done = 0;\n            }\n        }\n\n        if(value_done > 0)\n            values[i++] = value_acc;\n    }\n\n    return [values, it];\n}\n\nexport class Codec {\n    \n    /// Constructs codec by config or another serialized codec (this <=> cfg)\n    constructor(cfg) {\n        cfg = cfg || {};\n        this.meta   = +(!!cfg.meta);\n        this.array  = +(!!cfg.array);\n        this.depth  = cfg.depth || MAX_DEPTH;\n        check_cfg(this);\n    }\n    \n    /// @param arg -- single value or array of values to be encoded\n    /// @returns encoded string\n    encode(arg) {\n        assert((+Array.isArray(arg) | +(!!(arg).BYTES_PER_ELEMENT)) ^ !this.array, TypeCodecError,\n            'Incompatible codec (array <=> single value), arg =', arg);\n        \n        let res = '';\n\n        if(this.meta) // Save meta info\n            res = serialize_meta(res, this);\n        \n        if(this.array) {\n            // Effectively packs array of numbers\n            res = encode_array.call(this, res, arg);\n        } else {\n            // Packs single value, inline\n            let x = +arg % POWERS_OF_2[this.depth];\n            const len = Math.ceil(this.depth / SAFE_BITS);\n            for(let i = 0; i < len; ++i) {\n                const cp = num_to_code_point(x % UPPER_LIMIT);\n                res += String.fromCodePoint(cp);\n                x = Math.floor(x / UPPER_LIMIT);\n            }\n        }\n        \n        return res;\n    }\n\n    /// @param str -- string to be decoded\n    /// @param length_out -- output, read length will be saved as \"length_out.length\" (optional)\n    /// @returns decoded single value or array of values\n    decode(str, length_out) {\n        let meta = null;    // codec config\n        let length = 0;     // number of read code units\n        \n        if(this.meta) {\n            // Meta has been saved to str, restore\n            [str, length] = deserialize_meta(str, (meta = {}));\n        } else {\n            // Otherwise, use this config\n            meta = this;\n        }\n\n        assert(meta.array ^ !this.array, TypeCodecError,\n            'Incompatible codec (array <=> single value), str =', str);\n        \n        if(this.array) { // output is array of integers\n            const res = decode_array.call(this, str, meta);\n            !!length_out && (length_out.length = length + res[1]);\n            return res[0];\n        }\n\n        let acc = 0, pow = 0;\n        const len = Math.ceil(meta.depth / SAFE_BITS);\n        for(let i = 0; i < len; ++i) {\n            const x = code_point_to_num(str.codePointAt(i));\n            acc += x * POWERS_OF_2[pow];\n            pow += SAFE_BITS;\n        }\n\n        !!length_out && (length_out.length = length + len);\n        return acc;\n    }\n}","import { Codec } from '../../../utils/screeps-utf15';\n\nconst numberCodec = new Codec({ array: false });\n\nexport const NumberSerializer = {\n  serialize(target?: number) {\n    if (target === undefined) return undefined;\n    return numberCodec.encode(target);\n  },\n  deserialize(target?: string) {\n    if (target === undefined) return undefined;\n    return numberCodec.decode(target);\n  }\n};\n","import { CachingStrategy, GenericCachingStrategy, Serializer } from '.';\n\nconst cache = new Map<CachingStrategy, Map<Serializer<any>, Map<string, any>>>();\n\nfunction cachedMap(strategy: CachingStrategy, serializer: Serializer<any>): Map<string, any> {\n  const strategyMap = cache.get(strategy) ?? new Map<Serializer<any>, Map<string, any>>();\n  cache.set(strategy, strategyMap);\n  const serializerMap = strategyMap.get(serializer) ?? new Map<string, any>();\n  strategyMap.set(serializer, serializerMap);\n  return serializerMap;\n}\n\nexport const withSerializer = <T>(strategy: CachingStrategy, serializer: Serializer<T>): GenericCachingStrategy<T> => ({\n  // default most methods from strategy\n  ...strategy,\n  // override certain methods for serialization\n  get(key: string): T | undefined {\n    const map = cachedMap(strategy, serializer);\n    const serializedValue = strategy.get(key);\n    if (serializedValue === undefined) map.delete(key); // make sure cache isn't expired\n    const value = map.get(key) ?? serializer.deserialize(serializedValue);\n    if (value !== undefined) map.set(key, value);\n    return value;\n  },\n  set(key: string, value: T) {\n    const v = serializer.serialize(value);\n    const map = cachedMap(strategy, serializer);\n    if (v) {\n      strategy.set(key, v);\n      map.set(key, value);\n    } else {\n      strategy.delete(key);\n      map.delete(key);\n    }\n  },\n  delete(key) {\n    strategy.delete(key);\n    const map = cachedMap(strategy, serializer);\n    map.delete(key);\n  },\n  with<T>(serializer: Serializer<T>) {\n    return withSerializer(strategy, serializer);\n  }\n});\n","import { config } from 'config';\nimport { CachingStrategy } from '.';\nimport { NumberSerializer } from './Serializers/Number';\nimport { withSerializer } from './withSerializer';\n\ndeclare global {\n  interface Memory {\n    [index: string]: any;\n  }\n}\n\nfunction memoryCache() {\n  Memory[config.MEMORY_CACHE_PATH] ??= {};\n  return Memory[config.MEMORY_CACHE_PATH] as Record<string, string>;\n}\n\nfunction memoryExpirationCache() {\n  Memory[config.MEMORY_CACHE_EXPIRATION_PATH] ??= {};\n  return Memory[config.MEMORY_CACHE_EXPIRATION_PATH] as Record<string, string>;\n}\n\nexport const MemoryCache: CachingStrategy = {\n  set(key: string, value: string, expiration?: number) {\n    memoryCache()[key] = value;\n    if (expiration !== undefined) {\n      const expires = NumberSerializer.serialize(expiration);\n      if (expires) memoryExpirationCache()[key] = expires;\n    }\n  },\n  get(key: string) {\n    return memoryCache()[key];\n  },\n  expires(key: string) {\n    return NumberSerializer.deserialize(memoryExpirationCache()[key]);\n  },\n  delete(key: string) {\n    delete memoryCache()[key];\n  },\n  with(serializer) {\n    return withSerializer(MemoryCache, serializer);\n  },\n  clean() {\n    const expirationCache = memoryExpirationCache();\n    for (const key in expirationCache) {\n      const expires = NumberSerializer.deserialize(expirationCache[key]);\n      if (expires !== undefined && Game.time >= expires) {\n        MemoryCache.delete(key);\n        delete expirationCache[key];\n      }\n    }\n  }\n};\n","/**\n * screeps-packrat\n * ---------------\n * Lightning-fast and memory-efficient serialization of Screeps IDs, Coords, and RoomPositions\n * Code written by Muon as part of Overmind Screeps AI. Feel free to adapt as desired.\n * Package repository: https://github.com/bencbartlett/screeps-packrat\n *\n * Plain JS version is available in the #share-thy-code channel on the Screeps Slack.\n *\n * To use: import desired functions from module, or import entire module on main and use functions from global.\n * To benchmark: import tests file, PackratTests.run()\n *\n * Exported functions (available on global):\n *\n * +--------------------------+------------------------------------------------+-----------------+--------------------+\n * |         function         |                  description                   | execution time* | memory reduction** |\n * +--------------------------+------------------------------------------------+-----------------+--------------------+\n * | packId                   | packs a game object id into 6 chars            | 500ns           | -75%               |\n * | unpackId                 | unpacks 6 chars into original format           | 1.3us           |                    |\n * | packIdList               | packs a list of ids into a single string       | 500ns/id        | -81%               |\n * | unpackIdList             | unpacks a string into a list of ids            | 1.2us/id        |                    |\n * | packPos                  | packs a room position into 2 chars             | 150ns           | -90%               |\n * | unpackPos                | unpacks 2 chars into a room position           | 600ns           |                    |\n * | packPosList              | packs a list of room positions into a string   | 150ns/pos       | -95%               |\n * | unpackPosList            | unpacks a string into a list of room positions | 1.5us/pos       |                    |\n * | packCoord                | packs a coord (e.g. {x:25,y:25}) as a string   | 150ns           | -80%               |\n * | unpackCoord              | unpacks a string into a coord                  | 60-150ns        |                    |\n * | packCoordList            | packs a list of coords as a string             | 120ns/coord     | -94%               |\n * | unpackCoordList          | unpacks a string into a list of coords         | 100ns/coord     |                    |\n * | unpackCoordAsPos         | unpacks string + room name into a pos          | 500ns           |                    |\n * | unpackCoordListAsPosList | unpacks string + room name into a list of pos  | 500ns/coord     |                    |\n * +--------------------------+------------------------------------------------+-----------------+--------------------+\n *\n *  * Execution time measured on shard2 public servers and may vary on different machines or shards.\n * ** Memory reduction for list functions is the asymptotic limit of lists containing many entries. Lower reductions\n *    can be expected for smaller lists.\n *\n */\n\n/* tslint:disable no-bitwise prefer-for-of */\n\n/**\n * The following lines would be better placed in your declarations files\n */\n\nexport interface Coord {\n  x: number;\n  y: number;\n}\n\ndeclare var global: any;\ndeclare var PERMACACHE: { [key: string]: any };\n\nglobal.PERMACACHE = {}; // Create a permanent cache for immutable items such as room names\n\n/**\n * Convert a hex string to a Uint16Array.\n */\nfunction hexToUint16Array(hex: string): Uint16Array {\n  const len = Math.ceil(hex.length / 4); // four hex chars for each 16-bit value\n  const array = new Uint16Array(len);\n  for (let i = 0; i < hex.length; i += 4) {\n    array[i >>> 2] = parseInt(hex.substr(i, 4), 16);\n  }\n  return array;\n}\n\n/**\n * Convert a Uint16Array to a hex string. Note that uint16ArrayToHex(hexToUint16Array('0123abce')) will\n * return '123abcde' since this does not account for zero padding. Fortunately this is not an issue for screeps, since\n * ids do not seem to be allowed to start with a 0.\n */\nfunction uint16ArrayToHex(array: Uint16Array): string {\n  const hex: string[] = [];\n  let current: number;\n  for (let i = 0; i < array.length; ++i) {\n    current = array[i];\n    hex.push((current >>> 8).toString(16));\n    hex.push((current & 0xff).toString(16));\n  }\n  return hex.join('');\n}\n\n/**\n * Convert a standard 24-character hex id in screeps to a compressed UTF-16 encoded string of length 6.\n *\n * Benchmarking: average of 500ns to execute on shard2 public server, reduce stringified size by 75%\n */\nexport function packId(id: string): string {\n  return (\n    String.fromCharCode(parseInt(id.substr(0, 4), 16)) +\n    String.fromCharCode(parseInt(id.substr(4, 4), 16)) +\n    String.fromCharCode(parseInt(id.substr(8, 4), 16)) +\n    String.fromCharCode(parseInt(id.substr(12, 4), 16)) +\n    String.fromCharCode(parseInt(id.substr(16, 4), 16)) +\n    String.fromCharCode(parseInt(id.substr(20, 4), 16))\n  );\n}\n\n/**\n * Convert a compressed six-character UTF-encoded id back into the original 24-character format.\n *\n * Benchmarking: average of 1.3us to execute on shard2 public server\n */\nexport function unpackId(packedId: string): string {\n  let id = '';\n  let current: number;\n  for (let i = 0; i < 6; ++i) {\n    current = packedId.charCodeAt(i);\n    id += (current >>> 8).toString(16).padStart(2, '0'); // String.padStart() requires es2017+ target\n    id += (current & 0xff).toString(16).padStart(2, '0');\n  }\n  return id;\n}\n\n/**\n * Packs a list of ids as a utf-16 string. This is better than having a list of packed coords, as it avoids\n * extra commas and \"\" when memroy gets stringified.\n *\n * Benchmarking: average of 500ns per id to execute on shard2 public server, reduce stringified size by 81%\n */\nexport function packIdList(ids: string[]): string {\n  let str = '';\n  for (let i = 0; i < ids.length; ++i) {\n    str += packId(ids[i]);\n  }\n  return str;\n}\n\n/**\n * Unpacks a list of ids stored as a utf-16 string.\n *\n * Benchmarking: average of 1.2us per id to execute on shard2 public server.\n */\nexport function unpackIdList(packedIds: string): string[] {\n  const ids: string[] = [];\n  for (let i = 0; i < packedIds.length; i += 6) {\n    ids.push(unpackId(packedIds.substr(i, 6)));\n  }\n  return ids;\n}\n\n/**\n * Packs a coord as a single utf-16 character. The seemingly strange choice of encoding value ((x << 6) | y) + 65 was\n * chosen to be fast to compute (x << 6 | y is significantly faster than 50 * x + y) and to avoid control characters,\n * as \"A\" starts at character code 65.\n *\n * Benchmarking: average of 150ns to execute on shard2 public server, reduce stringified size by 80%\n */\nexport function packCoord(coord: Coord): string {\n  return String.fromCharCode(((coord.x << 6) | coord.y) + 65);\n}\n\n/**\n * Unpacks a coord stored as a single utf-16 character\n *\n * Benchmarking: average of 60ns-100ns to execute on shard2 public server\n */\nexport function unpackCoord(char: string): Coord {\n  const xShiftedSixOrY = char.charCodeAt(0) - 65;\n  return {\n    x: (xShiftedSixOrY & 0b111111000000) >>> 6,\n    y: xShiftedSixOrY & 0b000000111111\n  };\n}\n\n/**\n * Unpacks a coordinate and creates a RoomPosition object from a specified roomName\n *\n * Benchmarking: average of 500ns to execute on shard2 public server\n */\nexport function unpackCoordAsPos(packedCoord: string, roomName: string): RoomPosition {\n  const coord = unpackCoord(packedCoord);\n  return new RoomPosition(coord.x, coord.y, roomName);\n}\n\n/**\n * Packs a list of coords as a utf-16 string. This is better than having a list of packed coords, as it avoids\n * extra commas and \"\" when memroy gets stringified.\n *\n * Benchmarking: average of 120ns per coord to execute on shard2 public server, reduce stringified size by 94%\n */\nexport function packCoordList(coords: Coord[]): string {\n  let str = '';\n  for (let i = 0; i < coords.length; ++i) {\n    str += String.fromCharCode(((coords[i].x << 6) | coords[i].y) + 65);\n  }\n  return str;\n}\n\n/**\n * Unpacks a list of coords stored as a utf-16 string\n *\n * Benchmarking: average of 100ns per coord to execute on shard2 public server\n */\nexport function unpackCoordList(chars: string): Coord[] {\n  const coords: Coord[] = [];\n  let xShiftedSixOrY: number;\n  for (let i = 0; i < chars.length; ++i) {\n    xShiftedSixOrY = chars.charCodeAt(i) - 65;\n    coords.push({\n      x: (xShiftedSixOrY & 0b111111000000) >>> 6,\n      y: xShiftedSixOrY & 0b000000111111\n    });\n  }\n  return coords;\n}\n\n/**\n * Unpacks a list of coordinates and creates a list of RoomPositions from a specified roomName\n *\n * Benchmarking: average of 500ns per coord to execute on shard2 public server\n */\nexport function unpackCoordListAsPosList(packedCoords: string, roomName: string): RoomPosition[] {\n  const positions: RoomPosition[] = [];\n  let coord: Coord;\n  for (let i = 0; i < packedCoords.length; ++i) {\n    // Each coord is saved as a single character; unpack each and insert the room name to get the positions list\n    coord = unpackCoord(packedCoords[i]);\n    positions.push(new RoomPosition(coord.x, coord.y, roomName));\n  }\n  return positions;\n}\n\nPERMACACHE._packedRoomNames = PERMACACHE._packedRoomNames || {};\nPERMACACHE._unpackedRoomNames = PERMACACHE._unpackedRoomNames || {};\n\n/**\n * Packs a roomName as a single utf-16 character. Character values are stored on permacache.\n */\nexport function packRoomName(roomName: string): string {\n  if (PERMACACHE._packedRoomNames[roomName] === undefined) {\n    const coordinateRegex = /(E|W)(\\d+)(N|S)(\\d+)/g;\n    const match = coordinateRegex.exec(roomName)!;\n\n    const xDir = match[1];\n    const x = Number(match[2]);\n    const yDir = match[3];\n    const y = Number(match[4]);\n\n    let quadrant;\n    if (xDir == 'W') {\n      if (yDir == 'N') {\n        quadrant = 0;\n      } else {\n        quadrant = 1;\n      }\n    } else {\n      if (yDir == 'N') {\n        quadrant = 2;\n      } else {\n        quadrant = 3;\n      }\n    }\n\n    // y is 6 bits, x is 6 bits, quadrant is 2 bits\n    const num = ((quadrant << 12) | (x << 6) | y) + 65;\n    const char = String.fromCharCode(num);\n\n    PERMACACHE._packedRoomNames[roomName] = char;\n    PERMACACHE._unpackedRoomNames[char] = roomName;\n  }\n  return PERMACACHE._packedRoomNames[roomName];\n}\n\n/**\n * Packs a roomName as a single utf-16 character. Character values are stored on permacache.\n */\nexport function unpackRoomName(char: string): string {\n  if (PERMACACHE._unpackedRoomNames[char] === undefined) {\n    const num = char.charCodeAt(0) - 65;\n    const { q, x, y } = {\n      q: (num & 0b11000000111111) >>> 12,\n      x: (num & 0b00111111000000) >>> 6,\n      y: num & 0b00000000111111\n    };\n\n    let roomName: string;\n    switch (q) {\n      case 0:\n        roomName = 'W' + x + 'N' + y;\n        break;\n      case 1:\n        roomName = 'W' + x + 'S' + y;\n        break;\n      case 2:\n        roomName = 'E' + x + 'N' + y;\n        break;\n      case 3:\n        roomName = 'E' + x + 'S' + y;\n        break;\n      default:\n        roomName = 'ERROR';\n    }\n\n    PERMACACHE._packedRoomNames[roomName] = char;\n    PERMACACHE._unpackedRoomNames[char] = roomName;\n  }\n  return PERMACACHE._unpackedRoomNames[char];\n}\n\n/**\n * Packs a RoomPosition as a pair utf-16 characters. The seemingly strange choice of encoding value ((x << 6) | y) + 65\n * was chosen to be fast to compute (x << 6 | y is significantly faster than 50 * x + y) and to avoid control\n * characters, as \"A\" starts at character code 65.\n *\n * Benchmarking: average of 150ns to execute on shard2 public server, reduce stringified size by 90%\n */\nexport function packPos(pos: RoomPosition): string {\n  return packCoord(pos) + packRoomName(pos.roomName);\n}\n\n/**\n * Unpacks a RoomPosition stored as a pair of utf-16 characters.\n *\n * Benchmarking: average of 600ns to execute on shard2 public server.\n */\nexport function unpackPos(chars: string): RoomPosition {\n  const { x, y } = unpackCoord(chars[0]);\n  return new RoomPosition(x, y, unpackRoomName(chars[1]));\n}\n\n/**\n * Packs a list of RoomPositions as a utf-16 string. This is better than having a list of packed RoomPositions, as it\n * avoids extra commas and \"\" when memroy gets stringified.\n *\n * Benchmarking: average of 150ns per position to execute on shard2 public server, reduce stringified size by 95%\n */\nexport function packPosList(posList: RoomPosition[]): string {\n  let str = '';\n  for (let i = 0; i < posList.length; ++i) {\n    str += packPos(posList[i]);\n  }\n  return str;\n}\n\n/**\n * Unpacks a list of RoomPositions stored as a utf-16 string.\n *\n * Benchmarking: average of 1.5us per position to execute on shard2 public server.\n */\nexport function unpackPosList(chars: string): RoomPosition[] {\n  const posList: RoomPosition[] = [];\n  for (let i = 0; i < chars.length; i += 2) {\n    posList.push(unpackPos(chars.substr(i, 2)));\n  }\n  return posList;\n}\n\n// Useful to register these functions on global to use with console\nglobal.packId = packId;\nglobal.unpackId = unpackId;\nglobal.packIdList = packIdList;\nglobal.unpackIdList = unpackIdList;\nglobal.packCoord = packCoord;\nglobal.unpackCoord = unpackCoord;\nglobal.unpackCoordAsPos = unpackCoordAsPos;\nglobal.packCoordList = packCoordList;\nglobal.unpackCoordList = unpackCoordList;\nglobal.unpackCoordListAsPosList = unpackCoordListAsPosList;\nglobal.packPos = packPos;\nglobal.unpackPos = unpackPos;\nglobal.packPosList = packPosList;\nglobal.unpackPosList = unpackPosList;\n","import { MoveTarget } from 'lib';\nimport { packPos, unpackPos } from 'utils/packrat';\nimport { Codec } from '../../../utils/screeps-utf15';\n\n/**\n * Note: this binds range at 32768, which should be plenty for MoveTarget purposes\n */\nconst rangeCodec = new Codec({ array: false, depth: 15 });\n\nexport const MoveTargetSerializer = {\n  serialize(target?: MoveTarget) {\n    if (target === undefined) return undefined;\n    return `${packPos(target.pos)}${rangeCodec.encode(target.range)}`;\n  },\n  deserialize(target?: string) {\n    if (target === undefined) return undefined;\n    return {\n      pos: unpackPos(target.slice(0, 2)),\n      range: rangeCodec.decode(target.slice(2))\n    };\n  }\n};\n\n/**\n * Move target serializes into three characters: two for position and one for range\n */\nexport const MoveTargetListSerializer = {\n  serialize(target?: MoveTarget[]) {\n    if (target === undefined) return undefined;\n    return target.map(t => MoveTargetSerializer.serialize(t)).join('');\n  },\n  deserialize(target?: string) {\n    if (target === undefined) return undefined;\n    const targets = [];\n    for (let i = 0; i < target.length; i += 3) {\n      targets.push(MoveTargetSerializer.deserialize(target.slice(i, 3)));\n    }\n    return targets;\n  }\n};\n","import {\n  Coord,\n  packCoord,\n  packCoordList,\n  packPos,\n  packPosList,\n  unpackCoord,\n  unpackCoordList,\n  unpackPos,\n  unpackPosList\n} from 'utils/packrat';\n\nexport const PositionSerializer = {\n  serialize(pos?: RoomPosition) {\n    if (pos === undefined) return undefined;\n    return packPos(pos);\n  },\n  deserialize(pos?: string) {\n    if (pos === undefined) return undefined;\n    return unpackPos(pos);\n  }\n};\n\nexport const PositionListSerializer = {\n  serialize(pos?: RoomPosition[]) {\n    if (pos === undefined) return undefined;\n    return packPosList(pos);\n  },\n  deserialize(pos?: string) {\n    if (pos === undefined) return undefined;\n    return unpackPosList(pos);\n  }\n};\n\nexport const CoordSerializer = {\n  serialize(pos?: Coord) {\n    if (pos === undefined) return undefined;\n    return packCoord(pos);\n  },\n  deserialize(pos?: string) {\n    if (pos === undefined) return undefined;\n    return unpackCoord(pos);\n  }\n};\n\nexport const CoordListSerializer = {\n  serialize(pos?: Coord[]) {\n    if (pos === undefined) return undefined;\n    return packCoordList(pos);\n  },\n  deserialize(pos?: string) {\n    if (pos === undefined) return undefined;\n    return unpackCoordList(pos);\n  }\n};\n","import { HeapCache } from './Heap';\nimport { MemoryCache } from './Memory';\n\nexport interface CachingStrategy extends GenericCachingStrategy<string> {}\nexport interface GenericCachingStrategy<T> {\n  get(key: string): T | undefined;\n  set(key: string, value: T, expiration?: number): void;\n  expires(key: string): number | undefined;\n  delete(key: string): void;\n  with<T>(serializer: Serializer<T>): GenericCachingStrategy<T>;\n  clean(): void;\n}\nexport interface Serializer<T> {\n  serialize(value?: T): string | undefined;\n  deserialize(value?: string): T | undefined;\n}\n\nexport * from './Heap';\nexport * from './Memory';\nexport * from './Serializers/MoveTarget';\nexport * from './Serializers/Number';\nexport * from './Serializers/RoomPosition';\n\nexport function cleanAllCaches() {\n  MemoryCache.clean();\n  HeapCache.clean();\n}\n","export type CostMatrixMutator = (cm: CostMatrix, room: string) => CostMatrix;\nexport interface CostMatrixOptions {\n  avoidCreeps?: boolean;\n  avoidObstacleStructures?: boolean;\n  roadCost?: number;\n}\n\nexport const mutateCostMatrix = (cm: CostMatrix, room: string, opts: CostMatrixOptions) => {\n  if (opts.avoidCreeps) {\n    Game.rooms[room]?.find(FIND_CREEPS).forEach(c => cm.set(c.pos.x, c.pos.y, 255));\n  }\n  if (opts.avoidObstacleStructures || opts.roadCost) {\n    Game.rooms[room]?.find(FIND_STRUCTURES).forEach(s => {\n      if (opts.avoidObstacleStructures) {\n        if ((OBSTACLE_OBJECT_TYPES as string[]).includes(s.structureType)) {\n          cm.set(s.pos.x, s.pos.y, 255);\n        }\n      }\n      if (opts.roadCost) {\n        if (s instanceof StructureRoad && cm.get(s.pos.x, s.pos.y) !== 255) {\n          cm.set(s.pos.x, s.pos.y, opts.roadCost);\n        }\n      }\n    });\n  }\n  return cm;\n};\n","import { Codec } from '../../utils/screeps-utf15';\n\n/**\n * 15 bits will be enough for three hex characters\n */\nconst codec = new Codec({ array: false, depth: 15 });\n\n/**\n * `id` should be a hex string\n */\nexport const objectIdKey = (id: string, key?: string) => {\n  if (!id.length) throw new Error('Empty id');\n  let paddedId = id;\n  // pad id if needed\n  if (paddedId.length % 3 !== 0) {\n    paddedId = paddedId.padStart(Math.ceil(paddedId.length / 3) * 3, '0');\n  }\n  // split and compress id\n  let compressed = '';\n  for (let i = 0; i < paddedId.length; i += 3) {\n    compressed += codec.encode(parseInt(paddedId.slice(i, i + 3), 16));\n  }\n  return compressed + key ?? '';\n};\n","import { objectIdKey } from './ObjectId';\n\nexport const creepKey = (creep: Creep, key?: string) => objectIdKey(creep.id, key);\n","const profileCache = new Map<string, number[]>();\n\nexport const profile = <T>(key: string, callback: () => T): T => {\n  const list = profileCache.get(key) ?? [];\n  profileCache.set(key, list);\n  const start = Game.cpu.getUsed();\n  const result = callback();\n  list.push(Math.max(0, Game.cpu.getUsed() - start));\n  return result;\n};\n\nexport const profileReport = () => {\n  console.log();\n  const maxLength = Math.max('Profiling'.length - 2, ...[...profileCache.keys()].map(key => key.length));\n  const header = ` ${Game.time.toFixed(0).padEnd(maxLength + 2)} | Profiling Report`;\n  console.log(header);\n  console.log(''.padEnd(header.length, '-'));\n  console.log(' Profiling'.padEnd(maxLength + 3), '| Count | Avg CPU');\n  for (const [key, values] of profileCache) {\n    console.log(\n      ' -',\n      key.padEnd(maxLength),\n      '|',\n      values.length.toFixed(0).padStart(5, ' '),\n      '|',\n      (values.reduce((a, b) => a + b, 0) / values.length).toFixed(3)\n    );\n  }\n};\n","import { MoveOpts, MoveTarget } from 'lib';\nimport { CachingStrategy } from 'lib/CachingStrategies';\nimport { HeapCache } from 'lib/CachingStrategies/Heap';\nimport { MemoryCache } from 'lib/CachingStrategies/Memory';\nimport { MoveTargetListSerializer } from 'lib/CachingStrategies/Serializers/MoveTarget';\nimport { PositionListSerializer } from 'lib/CachingStrategies/Serializers/RoomPosition';\nimport { mutateCostMatrix } from 'lib/CostMatrixes';\nimport { creepKey } from 'lib/Keys/Creep';\nimport { profile } from 'utils/profiler';\nimport { config } from '../../config';\n\ndeclare global {\n  interface CreepMemory {\n    _cmvp?: string;\n    _cmvt?: string;\n  }\n}\n\nconst keys = {\n  CACHED_PATH: '_cp',\n  CACHED_PATH_EXPIRES: '_ce',\n  CACHED_PATH_TARGETS: '_ct'\n};\n\nfunction clearCachedPath(creep: Creep, cache: CachingStrategy) {\n  cache.delete(creepKey(creep, keys.CACHED_PATH));\n  cache.delete(creepKey(creep, keys.CACHED_PATH_TARGETS));\n}\n\n/**\n *\n * @param creep\n * @param targets\n * @param opts\n */\nexport const moveTo = (\n  creep: Creep,\n  targets: _HasRoomPosition | RoomPosition | MoveTarget | RoomPosition[] | MoveTarget[],\n  opts?: MoveOpts\n) => {\n  // map defaults onto opts\n  const actualOpts: MoveOpts = {\n    ...config.DEFAULT_MOVE_OPTS,\n    ...opts\n  };\n\n  // select cache for path\n  const cache = actualOpts.serializeMemory ? MemoryCache : HeapCache;\n\n  // convert target from whatever format to MoveTarget[]\n  const normalizedTargets: MoveTarget[] = [];\n  if (Array.isArray(targets)) {\n    if ('pos' in targets[0]) {\n      normalizedTargets.push(...(targets as MoveTarget[]));\n    } else {\n      normalizedTargets.push(...(targets as RoomPosition[]).map(pos => ({ pos, range: 1 })));\n    }\n  } else if ('pos' in targets) {\n    if ('range' in targets) {\n      normalizedTargets.push(targets);\n    } else {\n      normalizedTargets.push({ pos: targets.pos, range: 1 });\n    }\n  } else {\n    normalizedTargets.push({ pos: targets, range: 1 });\n  }\n\n  const complete = normalizedTargets.some(({ pos, range }) => pos.inRangeTo(creep.pos, range));\n  // Check if creep is already at target\n  if (complete) {\n    return OK;\n  }\n\n  // delete cached path if targets don't match\n  const targetsDontMatch =\n    MoveTargetListSerializer.serialize(normalizedTargets) !== cache.get(creepKey(creep, keys.CACHED_PATH_TARGETS));\n  if (targetsDontMatch) {\n    clearCachedPath(creep, cache);\n  }\n\n  // Check if matching cached path exists\n  let cachedPath = profile('deserializing path', () =>\n    cache.with(PositionListSerializer).get(creepKey(creep, keys.CACHED_PATH))\n  );\n  // if not, generate a new one\n  if (!cachedPath) {\n    cachedPath = profile('generating path', () => generateAndCachePath(creep, normalizedTargets, actualOpts, cache));\n    if (cachedPath && !(Array.isArray(targets) || 'range' in targets)) {\n      // targets is a RoomPosition or _HasRoomPosition; add the last step back to the path\n      const lastStep = 'pos' in targets ? targets.pos : targets;\n      cachedPath.push(lastStep);\n    }\n  }\n\n  if (!cachedPath) return ERR_NO_PATH;\n\n  // remove steps up to the creep's current position and recache with same expiration\n  cachedPath.splice(0, cachedPath.findIndex(pos => pos.isEqualTo(creep.pos)) + 1);\n  cache\n    .with(PositionListSerializer)\n    .set(creepKey(creep, keys.CACHED_PATH), cachedPath, cache.expires(creepKey(creep, keys.CACHED_PATH)));\n\n  // visualize path\n  if (actualOpts.visualizePathStyle) {\n    creep.room.visual.poly(cachedPath, actualOpts.visualizePathStyle);\n  }\n  return profile('moving by path', () => creep.move(creep.pos.getDirectionTo(cachedPath![0])));\n};\n\nfunction generateAndCachePath(\n  creep: Creep,\n  targets: MoveTarget[],\n  opts: MoveOpts,\n  cache: CachingStrategy\n): RoomPosition[] | undefined {\n  // key to confirm if current path is the same as saved path\n  const targetKey = MoveTargetListSerializer.serialize(targets);\n  if (!targetKey) return undefined;\n\n  // generate path\n  const result = PathFinder.search(creep.pos, targets, {\n    ...opts,\n    roomCallback(room) {\n      let cm = opts.roomCallback?.(room);\n      if (cm === false) return cm;\n      cm = new PathFinder.CostMatrix();\n      return mutateCostMatrix(cm.clone(), room, {\n        avoidCreeps: opts.avoidCreeps,\n        avoidObstacleStructures: opts.avoidObstacleStructures,\n        roadCost: opts.roadCost\n      });\n    }\n  });\n  if (!result.path.length) return undefined;\n\n  // path generation successful - cache results\n  const expiration = opts.reusePath ? Game.time + opts.reusePath + 1 : undefined;\n  cache.with(PositionListSerializer).set(creepKey(creep, keys.CACHED_PATH), result.path, expiration);\n  cache.set(creepKey(creep, keys.CACHED_PATH_TARGETS), targetKey, expiration);\n\n  return result.path;\n}\n","import { cleanAllCaches } from './CachingStrategies';\n\nexport type MoveTarget = { pos: RoomPosition; range: number };\nexport interface MoveOpts extends PathFinderOpts {\n  serializeMemory?: boolean;\n  reusePath?: number;\n  visualizePathStyle?: PolyStyle;\n}\n\nexport * from './CachingStrategies';\nexport * from './Movement/moveTo';\n\nexport function preTick() {\n  cleanAllCaches();\n}\n","import { moveTo, preTick } from 'lib';\nimport { packPos, packPosList } from 'utils/packrat';\nimport { profile, profileReport } from 'utils/profiler';\n\nexport const runTestScenarios = () => {\n  preTick();\n\n  for (const room in Game.rooms) {\n    spawn(room);\n  }\n  for (const name in Game.creeps) {\n    const creep = Game.creeps[name];\n    roles[creep.memory.role](creep);\n  }\n  visualizeIntel();\n  profileReport();\n};\n\ndeclare global {\n  interface CreepMemory {\n    state?: 'HARVEST' | 'UPGRADE' | 'DEPOSIT';\n    role: 'worker' | 'scout';\n    harvestSource?: Id<Source>;\n    room: string;\n    scoutTarget?: string;\n    useCartographer?: boolean;\n  }\n  interface RoomMemory {\n    visited?: boolean;\n    sources?: string;\n    controller?: string;\n    exits?: string;\n  }\n  interface Memory {\n    cg_perf: {\n      sum: number;\n      count: number;\n    };\n    mt_perf: {\n      sum: number;\n      count: number;\n    };\n  }\n}\n\nMemory.rooms ??= {};\n\nconst spawn = (room: string) => {\n  const [spawn] = Game.rooms[room].find(FIND_MY_SPAWNS).filter(s => !s.spawning);\n  if (!spawn) return;\n  const creeps = Object.keys(Game.creeps).filter(name => name.startsWith(room));\n  if (creeps.filter(name => name.includes('WORKER')).length < 6) {\n    // spawn a worker\n    spawn.spawnCreep([WORK, MOVE, MOVE, CARRY], `${room}_WORKER_${Game.time % 10000}`, {\n      memory: { room, role: 'worker', useCartographer: Boolean(Math.round(Math.random())) }\n    });\n  } else if (creeps.filter(name => name.includes('SCOUT')).length < 6) {\n    // spawn a scout\n    spawn.spawnCreep([MOVE], `${room}_SCOUT_${Game.time % 10000}`, {\n      memory: { room, role: 'scout' }\n    });\n  }\n};\n\nconst roles = {\n  worker: (creep: Creep) => {\n    if (!creep.memory.state || creep.memory.state === 'HARVEST') {\n      creep.memory.state = 'HARVEST';\n      if (!creep.memory.harvestSource) {\n        const sources = Game.rooms[creep.memory.room].find(FIND_SOURCES_ACTIVE);\n        const target = sources[Math.floor(Math.random() * sources.length)];\n        if (!target && creep.store.getUsedCapacity(RESOURCE_ENERGY)) {\n          creep.memory.state = 'DEPOSIT';\n          return;\n        }\n        creep.memory.harvestSource = target?.id;\n      }\n      if (!creep.memory.harvestSource) return;\n\n      const source = Game.getObjectById(creep.memory.harvestSource);\n      if (!source) return;\n\n      if (creep.harvest(source) === ERR_NOT_IN_RANGE) {\n        if (creep.memory.useCartographer) {\n          profile('cg_perf', () => moveTo(creep, source));\n        } else {\n          profile('mt_perf', () => creep.moveTo(source, { visualizePathStyle: { stroke: 'red' } }));\n        }\n      } else {\n        if (creep.store.getFreeCapacity() === 0) {\n          delete creep.memory.harvestSource;\n          const ttd = Game.rooms[creep.memory.room].controller?.ticksToDowngrade;\n          if (ttd && ttd < 3000) {\n            creep.memory.state = 'UPGRADE';\n          } else {\n            creep.memory.state = 'DEPOSIT';\n          }\n        }\n      }\n    }\n\n    if (creep.memory.state === 'UPGRADE') {\n      const controller = Game.rooms[creep.memory.room].controller;\n      if (!controller) {\n        creep.memory.state = 'DEPOSIT';\n        return;\n      }\n      if (creep.upgradeController(controller) === ERR_NOT_IN_RANGE) {\n        if (creep.memory.useCartographer) {\n          profile('cg_perf', () => moveTo(creep, controller));\n        } else {\n          profile('mt_perf', () => creep.moveTo(controller, { visualizePathStyle: { stroke: 'red' } }));\n        }\n      } else {\n        if (creep.store.getUsedCapacity() === 0) {\n          creep.memory.state = 'HARVEST';\n        }\n      }\n    }\n\n    if (creep.memory.state === 'DEPOSIT') {\n      const [spawn] = Game.rooms[creep.memory.room].find(FIND_MY_SPAWNS);\n      if (!spawn || spawn.store.getFreeCapacity(RESOURCE_ENERGY) === 0) {\n        creep.memory.state = 'UPGRADE';\n        return;\n      }\n      if (creep.transfer(spawn, RESOURCE_ENERGY) === ERR_NOT_IN_RANGE) {\n        if (creep.memory.useCartographer) {\n          profile('cg_perf', () => moveTo(creep, spawn));\n        } else {\n          profile('mt_perf', () => creep.moveTo(spawn, { visualizePathStyle: { stroke: 'red' } }));\n        }\n      } else {\n        if (creep.store.getUsedCapacity() === 0) {\n          creep.memory.state = 'HARVEST';\n        }\n      }\n    }\n  },\n  scout: (creep: Creep) => {\n    // Store intel\n    if (!Memory.rooms[creep.pos.roomName]?.visited) {\n      Memory.rooms[creep.pos.roomName] = {\n        visited: true,\n        sources: packPosList(creep.room.find(FIND_SOURCES).map(s => s.pos)),\n        controller: creep.room.controller ? packPos(creep.room.controller.pos) : undefined,\n        exits: packPosList(creep.room.find(FIND_EXIT))\n      };\n      Object.values(Game.map.describeExits(creep.pos.roomName)).forEach(\n        adjacentRoom => (Memory.rooms[adjacentRoom] ??= {})\n      );\n    }\n\n    // If we reached the previous target, pick a new one\n    if (creep.pos.roomName === creep.memory.scoutTarget) {\n      delete creep.memory.scoutTarget;\n      for (const room in Memory.rooms) {\n        if (!Memory.rooms[room].visited && !Object.values(Game.creeps).some(c => c.memory.scoutTarget === room)) {\n          creep.memory.scoutTarget = room;\n          break;\n        }\n      }\n    }\n    if (!creep.memory.scoutTarget) return; // no more rooms to scout\n\n    moveTo(creep, { pos: new RoomPosition(25, 25, creep.memory.scoutTarget), range: 20 });\n  }\n};\n\nconst visualizeIntel = () => {\n  for (const room in Memory.rooms) {\n    if (Memory.rooms[room].visited) {\n      Game.map.visual.text('✓', new RoomPosition(25, 25, room));\n    } else {\n      Game.map.visual.text('...', new RoomPosition(25, 25, room));\n    }\n  }\n};\n","export * from 'lib';\n\nimport { runTestScenarios } from 'test';\n\nexport const loop = () => {\n  runTestScenarios();\n};\n"],"names":["cache"],"mappings":"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"}